import os
import numpy as np
import matplotlib.pyplot as plt
from array import array


def is_pe_file(input_dir, filename):
    file_path = os.path.join(input_dir, filename)
    with open(file_path, "rb") as f:
        byte = f.read(2)
        if byte == b'MZ':
            return True
        else:
            return False


def bin_to_img(input_dir, output_dir, filename, is_show=False):
    file_path = os.path.join(input_dir, filename)
    img_path = os.path.join(output_dir, filename + '.png')
    file_size = os.path.getsize(file_path)

    # map file size to image width
    file_size_kb = file_size / 1024
    size_range = [0, 10, 30, 60, 100, 200, 500, 1000]
    width_arr = [32, 64, 128, 256, 384, 512, 768, 1024]
    idx = np.searchsorted(size_range, file_size_kb, side='right') - 1
    width = width_arr[idx]

    # reshape pe file bit stream to img matrix
    img = array('B')
    with open(file_path, 'rb') as f:
        img.fromfile(f, file_size)

    img = np.array(img, dtype=np.uint8)
    img.resize(int(np.ceil(file_size/width)),width)

    # show & save image file
    if is_show:
        plt.imshow(img, cmap='gray')
        plt.show()
    plt.imsave(img_path, img, cmap='gray')


if __name__ == '__main__':
    input_dir = r'./data/'
    output_dir = r'./data/'
    filename = r'name'
    if is_pe_file(input_dir, filename):
        bin_to_img(input_dir, output_dir, filename, True)
