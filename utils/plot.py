import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import os
import sys
sys.path.append('./')
from config.cfgs import cfgs


def plot_loss_acc(model, steps=50):
    if model not in ['vgg16', 'resnet50']:
        raise NotImplementedError

    train_loss = np.load(f'{cfgs["save_data_path"]}/{model}_train_loss_{steps}.npy')
    val_loss = np.load(f'{cfgs["save_data_path"]}/{model}_val_loss_{steps}.npy')
    train_acc = np.load(f'{cfgs["save_data_path"]}/{model}_train_acc_{steps}.npy')
    val_acc = np.load(f'{cfgs["save_data_path"]}/{model}_val_acc_{steps}.npy')
    
    plt.figure(figsize=(8, 6))
    plt.plot(range(1,len(train_loss)+1), train_loss, label='Training loss')
    plt.plot(range(1,len(val_loss)+1), val_loss, label='Testing loss')
    plt.legend()
    plt.savefig(f'{cfgs["save_img_path"]}/{model}_loss_{steps}.png')

    plt.figure(figsize=(8, 6))
    plt.plot(range(1,len(train_acc)+1), train_acc, label='Training accuracy')
    plt.plot(range(1,len(val_acc)+1), val_acc, label='Testing accuracy')
    plt.legend()
    plt.savefig(f'{cfgs["save_img_path"]}/{model}_acc_{steps}.png')

def plot_conf_matrix(fn):
    conf_matrix = np.load(f'{cfgs["save_data_path"]}/{fn}_conf_matrix.npy')
    class_names = os.listdir(cfgs['malimg_path'])
    plt.figure(figsize=(16, 16))
    sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=class_names, yticklabels=class_names)
    plt.xlabel('Predicted Labels')
    plt.ylabel('True Labels')
    plt.title('Confusion Matrix')
    plt.savefig(f"{cfgs['save_img_path']}/{fn}_conf_matrix.png")
