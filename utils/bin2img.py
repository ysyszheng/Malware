import os
import numpy as np
import matplotlib.pyplot as plt
from array import array
import cv2


def bin_to_img(input_dir, output_dir, filename, is_show=False):
    '''
    Convert a Windows PE file to grayscale image.
    Use the algorithm from *Malware images: visualization and automatic classification*.
    '''
    file_path = os.path.join(input_dir, filename)
    img_path = os.path.join(output_dir, filename + '.png')
    file_size = os.path.getsize(file_path)

    file_size_kb = file_size / 1024
    size_range = [0, 10, 30, 60, 100, 200, 500, 1000]
    width_arr = [32, 64, 128, 256, 384, 512, 768, 1024]
    idx = np.searchsorted(size_range, file_size_kb, side='right') - 1
    width = width_arr[idx]

    img = array('B')
    with open(file_path, 'rb') as f:
        img.fromfile(f, file_size)

    img = np.array(img, dtype=np.uint8)
    img.resize(int(np.ceil(file_size/width)), width)

    if is_show:
        plt.imshow(img, cmap='gray')
        plt.show()
    plt.imsave(img_path, img, cmap='gray')

def bin_to_dct(input_dir, output_dir, filename, is_show=False):
    '''
    Convert a Windows PE file to DCT image.
    Use the algorithm from *Malware Detection Using Frequency Domain-Based Image Visualization and Deep Learning*.
    '''
    file_path = os.path.join(input_dir, filename)
    img_path = os.path.join(output_dir, filename + '.png')

    with open(file_path, 'rb') as file:
        content = file.read()

    img = np.zeros((256,256))
    for i in range(len(content)-1):
        img[content[i],content[i+1]] += 1

    img[0,0] = 0
    img = np.round(img/np.max(img)*255)
    img = cv2.dct(img)
    
    if is_show:
        plt.imshow(img, cmap='gray')
        plt.show()
    plt.imsave(img_path, img, cmap='gray')
