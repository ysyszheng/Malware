import os
from tqdm import tqdm
import sys
sys.path.append('..')

from utils.utils import is_pe_file
from utils.bin2img import bin_to_img, bin_to_dct
from config.config import get_config


def convert_one_class(input_dir, output_dir, check, algo):
    '''
    Convert all the files in the input directory to grayscale images.
    Assumes that the input directory contains only one class of files.
    '''
    file_list = os.listdir(input_dir)
    file_list_bar = tqdm(file_list)

    for filename in file_list_bar:
        if algo in ['bin2img', 'bin2dct']:
            if check and not is_pe_file(input_dir, filename):
                print(f"{input_dir}/{filename} is not a PE file!")
            else:
                if algo == 'bin2img':
                    bin_to_img(input_dir, output_dir, filename)
                elif algo == 'bin2dct':
                    bin_to_dct(input_dir, output_dir, filename)
        else:
            print("Invalid algorithm value!")
        file_list_bar.set_description(f"Processing {filename}")


def convert_all_class(input_path, output_path, check, algo):
    '''
    Convert all the files in the input directory to grayscale images.
    Assumes that the input directory contains multiple classes of subdirectories.
    '''
    for subdir in os.listdir(input_path):
        convert_one_class(os.path.join(input_path, subdir),
                os.path.join(output_path, subdir), check, algo)


if __name__ == '__main__':
    config = get_config()
    if config['need_convert']:
        if not os.path.exists(config['img_path']):
            os.makedirs(config['img_path'])
        convert_all_class(config['data_path'], config['img_path'],
                          config['check_file'], config['convert_algo'])
