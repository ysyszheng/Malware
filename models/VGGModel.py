import torch.nn as nn
from config.config import device, config
import torchvision.models as models

class VGG16(nn.Module):
    def __init__(self, num_classes=1000):
        super(VGG16, self).__init__()
        self.vgg = models.vgg16(weights='DEFAULT') # TODO: pretrain in natural img -> self-supervised in pe file img
        # self.vgg = models.vgg16(pretrained=True) # TODO: pretrain in natural img -> self-supervised in pe file img
        num_features = self.vgg.classifier[-1].in_features
        self.vgg.classifier[-1] = nn.Linear(num_features, num_classes)

    def forward(self, x):
        x = self.vgg(x)
        return x
