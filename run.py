from config.cfgs import cfgs
import argparse
import os

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--model', type = str, default = None, help = 'Model')
    parser.add_argument('--mode', type = str, default = 'train', help = 'Mode')
    args = parser.parse_args()

    if args.model is not None:
        cfgs['model'] = args.model
    if args.mode is not None:
        cfgs['mode'] = args.mode
    cfgs['num_classes'] = len(os.listdir(cfgs['malimg_path']))

    for dir in [cfgs['save_model_path'],cfgs['save_data_path'],cfgs['save_img_path']]:
        os.makedirs(dir, exist_ok=True)

    if args.model in ['vgg16', 'resnet50', 'googlenet', 'densenet121', 'shufflenet']:
        from scripts.traincnn import Trainer
        trainer = Trainer(cfgs)
        if args.mode == 'train':
            trainer.training()
        elif args.mode == 'test':
            trainer.testing()
        else:
            raise NotImplementedError
    elif args.model == 'ensemble':
        from scripts.ensemble import Ensembler
        ensembler = Ensembler(cfgs)
        if args.mode == 'majority_voting':
            ensembler.majority_voting()
        elif args.mode == 'distribution_summation':
            ensembler.distribution_summation()
        elif args.mode == 'bayesian_combination':
            ensembler.bayesian_combination()
        elif args.mode == 'stacking':
            ensembler.stacking()
        elif args.mode == 'mlp':
            ensembler.mlp()
        else:
            raise NotImplementedError
    else:
        raise NotImplementedError