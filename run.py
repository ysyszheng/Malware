from config.cfgs import cfgs
import argparse

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--model', type = str, default = None, help = 'Model')
    parser.add_argument('--mode', type = str, default = 'train', help = 'Mode')
    args = parser.parse_args()

    if args.model is not None:
        cfgs['model'] = args.model
    if args.mode is not None:
        cfgs['mode'] = args.mode

    if args.model in ['vgg16', 'resnet50', 'googlenet', 'densenet121', 'shufflenet']:
        if args.mode == 'train':
            from scripts.train import Trainer
            trainer = Trainer(cfgs)
            trainer.training()
            trainer.get_conf_matrix()
        elif args.mode == 'get_conf_matrix':
            from scripts.train import Trainer
            trainer = Trainer(cfgs)
            trainer.get_conf_matrix()
        else:
            raise NotImplementedError
    elif args.model == 'bayesian_combination':
        from scripts.ensemble import Ensembler
        ensembler = Ensembler(cfgs)
        ensembler.bayesian_combination()
    elif args.model == 'stacking':
        from scripts.ensemble import Ensembler
        ensembler = Ensembler(cfgs)
        ensembler.stacking()
    else:
        raise NotImplementedError